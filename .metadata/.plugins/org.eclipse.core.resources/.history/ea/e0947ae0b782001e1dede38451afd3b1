<style>
	.hidden {
		display: none;
	}
</style>
<div class="my-5">
	<h1 class="text-center mb-5">댓글관리</h1>
	<div class="my-5" id="btn-write">
		<button class="btn btn-secondary w-100">댓글작성</button>
	</div>
	<div class="my-5" id="div-write" style="display: none;">
		<textarea id="txt-body" class="form-control" rows="5" placeholder="댓글 내용을 입력하세요."></textarea>
		<div class="text-end mt-2">
			<button class="btn btn-secondary px-5" id="btn-insert">등록</button>
		</div>
	</div>
	<div id="div_comments"></div>
	<div id="pagination" class="pagination justify-content-center mt-5"></div>
</div>

<script id="temp_comments" type="x-handlebars-template">
	{{#each .}}
		<div class="row">
			<div class="col-2 text-center">
				<img src="{{fn_photo photo}}" width="30" class="photo">
				<div>{{uname}}</div>
			</div>
			<div class="col">
				<div>{{fmtdate}}</div>
				{{body}}
				<div class="text-end {{fn_hidden writer}}">
					<button class="btn btn-outline-success btn-sm">수정</button>
					<button class="btn-delete btn btn-outline-secondary btn-sm" cid="{{cid}}">삭제</button>
				</div>
			</div>
		</div>
		<hr>
	{{/each}}
</script>
<script>
	Handlebars.registerHelper("fn_hidden", function(writer){
		if(sessionStorage.getItem("uid") != writer){
			return "hidden";
		}
	});
	
	Handlebars.registerHelper("fn_photo", function(photo){
		if(photo){
			return "/display?file=" + photo;
		}else{
			return "http://via.placeholder.com/100x100";
		}
	});
</script>
<script>
	let page = 1;
	let size = 3;
	const post_id = "[[${param.pid}]]";
	
	if(sessionStorage.getItem("uid")){
		$("#btn-write, #div-write").toggle();
	}
	
	//댓글 삭제버튼 눌렀을 때
	$("#div_comments").on("click", ".btn-delete", function(){
		const cid = $(this).attr("cid");
		if(confirm(`${cid}번 댓글을 삭제할까요?`)){
			//댓글 삭제 작업
			$.ajax({
				type:"get",
				url:"/comments/delete",
				data:{cid},
				success:function(){
					getTotal();
				}
			})
		}
	})
	
	//댓글작성 버튼 눌렀을때
	$("#btn-write").on("click", function(){
		sessionStorage.setItem("target", "/posts/read?pid=" + post_id);
		location.href="/users/login";
	})
	
	//댓글 등록 버튼 눌렀을때
	$("#btn-insert").on("click", function(){
		const writer = sessionStorage.getItem("uid");
		const body = $("#txt-body").val();
		const pid = post_id;
		if(body == ""){
			alert("댓글 내용을 입력하세요.");
			$("#txt-body").focus();
			return;
		}
		//댓글 등록 작업
		//alert(`${writer}\n${body}\n${pid}`);
		$.ajax({
			type:"post",
			url:"/comments/insert",
			data:JSON.stringify({pid, body, writer}),
			contentType:"application/json",
			success:function(){
				alert("댓글이 등록되었습니다.");
				getTotal();
				$("#txt-body").val("");
			}
		})
	})
	
	getTotal();
	
	function getTotal(){
		$.ajax({
			type:"get",
			url:"/comments/total",
			data:{pid:post_id},
			success:function(data){
				if(data > size){
					$("#pagination").show();
					const totalPages = Math.ceil(data/size);
					$("#pagination").twbsPagination("changeTotalPages", totalPages, page);
				}else{
					getComments();
					$("#pagination").hide();
				}
			}
		});
	}
	
	
	function getComments(){
		$.ajax({
			type:"get",
			url:"/comments/list.json",
			data:{page, size, pid:post_id},
			success:function(data){
				const temp=Handlebars.compile($("#temp_comments").html());
				$("#div_comments").html(temp(data));
			}
		});
	}
	
	$('#pagination').twbsPagination({
	    totalPages:10, //총 페이지 번호 수
	    visiblePages: 5, // 하단에서 한 번에 보여 지는 페이지 번호 수
	    startPage : 1, // 시작 시 표시되는 현재 페이지
	    initiateStartPageClick: false, // 플러그인이 시작 시 페이지 버튼 클릭 여부 (default : true) 
	    first : '<<', // 페이지네이션 버튼 중 처음으로 돌아가는 버튼에 쓰여 있는 텍스트
	    prev : '<', // 이전 페이지 버튼에 쓰여 있는 텍스트
	    next : '>', // 다음 페이지 버튼에 쓰여 있는 텍스트
	    last : '>>', // 페이지네이션 버튼 중 마지막으로 가는 버튼에 쓰여 있는 텍스트
	    onPageClick: function (event, clickPage) {
	        page=clickPage;
	        getComments(); 
	    }
	});
</script>