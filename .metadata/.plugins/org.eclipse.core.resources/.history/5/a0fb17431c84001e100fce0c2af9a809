<div class="my-5">
	<h1 class="text-center mb-5">교수목록</h1>
	<div class="row">
		<div class="col">
			<form name="frm" class="input-group">
				<select class="form-select" name="key">
					<option value="pcode">교수번호</option>
					<option value="pname">교수이름</option>
					<option value="dept">교수학과</option>
					<option value="title">교수직책</option>
				</select>
				<input name="query" class="form-control ms-2" placeholder="검색어">
				<button class="btn btn-outline-dark">검색</button>
				<span id="total" class="mt-2 ms-3"></span>
			</form>
		</div>
		<div class="text-end col">
			<a href="/pro/insert" class="btn btn-outline-dark px-4">교수등록</a>
		</div>
	</div>
	<hr>
	<div id="div_pro"></div>
	<div id="pagination" class="pagination justify-content-center mt-5"></div>
</div>

<script id="temp_pro" type="x-handlebars-template">
	<table class="table">
		{{#each .}}
		<tr>
			<td>{{pcode}}</td>
			<td><a href="/pro/read?pcode={{pcode}}">{{pname}}</a></td>
			<td>{{dept}}</td>
			<td>{{fmtdate}}</td>
			<td class="text-end">{{fmtsalary}}원</td>
		</tr>
		{{/each}}
	</table>
</script>

<script>
	let page = 1;
	const size = 3;

	//검색할때마다 리스트 다시 가져오기
	$(frm).on("submit", function(e){
		e.preventDefault();
		page = 1;
		getTotal();
	});
	
	getTotal();
	
	function getTotal(){ //갯수 구하는
		const query = $(frm.query).val();
		const key = $(frm.key).val();
		$.ajax({
			type:"get",
			url:"/pro/total",
			data:{query, key},
			success:function(data){
				$("#total").html(`검색수: ${data}건`);
				if(data > size){
					//total 페이지 구하기
					const totalPages = Math.ceil(data/size);
	                $("#pagination").twbsPagination("changeTotalPages", totalPages, page)
				}else{
					getList();
				}
			}
		});
	}
	
	function getList(){ //목록 구하는
		const query = $(frm.query).val();
		const key = $(frm.key).val();
		$.ajax({
			type:"get",
			url:"/pro/slist.json",
			data:{page, size, query, key},
			success:function(data){
				const temp = Handlebars.compile($("#temp_pro").html());
				$("#div_pro").html(temp(data));
			}
		});
	}
	
	$('#pagination').twbsPagination({
	    totalPages:10, //총 페이지 번호 수
	    visiblePages: 5, // 하단에서 한 번에 보여 지는 페이지 번호 수
	    startPage : 1, // 시작 시 표시되는 현재 페이지
	    initiateStartPageClick: false, // 플러그인이 시작 시 페이지 버튼 클릭 여부 (default : true) 
	    first : '<<', // 페이지네이션 버튼 중 처음으로 돌아가는 버튼에 쓰여 있는 텍스트
	    prev : '<', // 이전 페이지 버튼에 쓰여 있는 텍스트
	    next : '>', // 다음 페이지 버튼에 쓰여 있는 텍스트
	    last : '>>', // 페이지네이션 버튼 중 마지막으로 가는 버튼에 쓰여 있는 텍스트
	    onPageClick: function (event, clickPage) {
	        page=clickPage;
	        getList(); 
	    }
	});
</script>